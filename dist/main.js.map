{"version":3,"file":"main.js","mappings":"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","sources":["webpack://form-validation/./src/index.js"],"sourcesContent":["import './index.css';\n\nclass FormField {\n  constructor(selector) {\n    if (!selector) throw new Error('A selector param is required');\n    this.field = document.querySelector(selector);\n    this.errorElem = this.field.nextElementSibling;\n    this.validIcon = this.errorElem.nextElementSibling;\n    this.active = false;\n    this.rules = [];\n    this.init();\n  }\n\n  init() {\n    this.field.addEventListener('blur', this.validateOnBlur.bind(this));\n    this.field.addEventListener('input', this.validateOnInput.bind(this));\n  }\n\n  validateOnBlur() {\n    if (!this.active) this.active = true;\n    this.validate();\n  }\n\n  validateOnInput() {\n    if (!this.active) return;\n    this.validate();\n  }\n\n  addRule(checkIfValid, errorMessage) {\n    this.rules.unshift({ checkIfValid, errorMessage });\n  }\n\n  validate() {\n    const firstInvalid = this.rules.find(\n      (rule) => !rule.checkIfValid(this.field.value),\n    );\n\n    if (firstInvalid) {\n      this.showMessage(false, firstInvalid.errorMessage);\n    } else {\n      this.showMessage(true);\n    }\n  }\n\n  showMessage(isValid, errorMessage) {\n    this.errorElem.textContent = '';\n    if (isValid) {\n      this.validIcon.style.display = 'block';\n      this.field.classList.remove('is-invalid');\n      this.field.classList.add('is-valid');\n    } else {\n      this.validIcon.style.display = 'none';\n      this.field.classList.remove('is-valid');\n      this.field.classList.add('is-invalid');\n      this.errorElem.textContent = errorMessage;\n    }\n  }\n}\n\nconst emailField = new FormField('.js-email');\nconst passwordField = new FormField('.js-password');\nconst confirmPasswordField = new FormField('.js-password-confirm');\nconst countrySelectField = new FormField('.js-country');\nconst zipCodeField = new FormField('.js-zip-code');\n\nemailField.addRule(\n  (fieldValue) => /^\\S+@\\S+\\.\\S+$/g.test(fieldValue),\n  'Invalid email address.',\n);\n\nemailField.addRule(\n  (fieldValue) => fieldValue.trim() !== '',\n  'Email is required.',\n);\n\npasswordField.addRule(\n  (fieldValue) => /[^0-9a-zA-Z]/.test(fieldValue),\n  'Password must contain at least one special character.',\n);\n\npasswordField.addRule(\n  (fieldValue) => /[A-Z]/.test(fieldValue),\n  'Password must contain at least one uppercase letter.',\n);\n\npasswordField.addRule(\n  (fieldValue) => /[0-9]/.test(fieldValue),\n  'Password must contain at least one number.',\n);\n\npasswordField.addRule((fieldValue) => {\n  confirmPasswordField.validateOnInput();\n  return /^.{8,}$/.test(fieldValue);\n}, 'Password must be at least 8 characters long.');\n\nconfirmPasswordField.addRule(\n  (fieldValue) => fieldValue === passwordField.field.value,\n  \"Password doesn't match\",\n);\n\nconst checkZIP = (fieldValue) => {\n  const constraints = {\n    ch: /^(CH-)?\\d{4}$/i,\n    fr: /^(F-)?\\d{5}$/i,\n    de: /^(D-)?\\d{5}$/i,\n    nl: /^(NL-)?\\d{4}\\s*([A-RT-Z][A-Z]|S[BCE-RT-Z])$/i,\n  };\n\n  return constraints[countrySelectField.field.value].test(fieldValue);\n};\nconst zipErrorMessage = Object.create({\n  toString() {\n    const messages = {\n      ch: 'Switzerland ZIPs must have exactly 4 digits: e.g. CH-1950 or 1950',\n      fr: 'France ZIPs must have exactly 5 digits: e.g. F-75012 or 75012',\n      de: 'Germany ZIPs must have exactly 5 digits: e.g. D-12345 or 12345',\n      nl: 'Netherland ZIPs must have exactly 4 digits, followed by 2 letters except SA, SD and SS',\n    };\n\n    return messages[countrySelectField.field.value];\n  },\n});\nzipCodeField.addRule((fieldValue) => checkZIP(fieldValue), zipErrorMessage);\nzipCodeField.addRule(\n  (fieldValue) => fieldValue.trim() !== '',\n  'Zip Code is required.',\n);\n\ncountrySelectField.field.addEventListener('change', () =>\n  zipCodeField.validateOnInput(),\n);\n\nconst showCongratulations = () => {\n  document.querySelector('.js-congrats').classList.remove('card--hidden');\n};\n\nconst hideCongratulations = () => {\n  document.querySelector('.js-congrats').classList.add('card--hidden');\n};\n\ndocument.querySelector('.js-submit').addEventListener('click', (event) => {\n  event.preventDefault();\n  const fields = [\n    emailField,\n    passwordField,\n    confirmPasswordField,\n    countrySelectField,\n    zipCodeField,\n  ];\n  fields.forEach((field) => field.validateOnBlur());\n\n  console.log(document.querySelector('.is-invalid'));\n  if (document.querySelector('.is-invalid')) return;\n\n  showCongratulations();\n  fields.forEach((field) => {\n    const callback = () => {\n      hideCongratulations();\n      field.field.removeEventListener('input', callback);\n    };\n    field.field.addEventListener('input', callback);\n  });\n});\n"],"names":["FormField","constructor","selector","Error","this","field","document","querySelector","errorElem","nextElementSibling","validIcon","active","rules","init","addEventListener","validateOnBlur","bind","validateOnInput","validate","addRule","checkIfValid","errorMessage","unshift","firstInvalid","find","rule","value","showMessage","isValid","textContent","style","display","classList","remove","add","emailField","passwordField","confirmPasswordField","countrySelectField","zipCodeField","fieldValue","test","trim","zipErrorMessage","Object","create","toString","ch","fr","de","nl","checkZIP","event","preventDefault","fields","forEach","console","log","callback","removeEventListener"],"sourceRoot":""}